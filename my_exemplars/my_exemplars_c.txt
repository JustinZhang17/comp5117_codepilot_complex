Example 1 -
Code snippet:
#include<stdio.h>
#include<stdlib.h>
int find_minimum(int i, int j){
    if (i <= j){
        return i;
    }
    return j;
}
int main(){
    int i = 6;
    int j = 2;
    printf("min(%d, %d) = %d\n", i, j, find_minimum(i, j));
}
PLAN:
Step 1: Import stdio.h and stdlib.h libraries. These lines will be executed if a main function exists.
Step 2: Verify that a main function exists.
Step 3: Since a main function exists, the main function is executed.
Step 4: Variable initialization and assignment in the main function: variable i is assigned an integer value of 6, and variable j is assigned an integer value of 2. These lines will be executed.
Step 5: Print the values of variables i and j, along with the returned integer value of the find_minimum function with parameters i and j. This line will be executed if a find_minimum function with two integer parameters exists and executes without error.
Step 6: Verify that a find_minimum function with two integer parameters exists.
Step 7: Since a find_minimum function with two integer parameters exists, the find_minimum function is executed.
Step 8: Conditional statement in find_minimum function: if parameter i is less than or equal to parameter j, return parameter i. Otherwise, return parameter j. Since parameter i is greater than parameter j, parameter j will be returned.
The code coverage of the given code snippet is then -
> #include<stdio.h>
> #include<stdlib.h>
> int find_minimum(int i, int j){
>     if (i <= j){
!         return i;
      }
>     return j;
  }
> int main(){
>     int i = 6;
>     int j = 2;
>     printf("min(%d, %d) = %d\n", i, j, find_minimum(i, j));
  }
--------------------------------------------------------------------------------------------------------------------------------
Example 2 -
Code snippet:
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
void simple_recursion(int my_rand){
    if (my_rand > 1){
        simple_recursion(my_rand/2);
    }
    else {
        return;
    }
}
int main(){
    srand(time(NULL));
    int my_rand = rand();
    if ((my_rand % 2) == 0){
        simple_recursion(my_rand);
    }
    else {
        simple_recursion(my_rand-1);
    }
}
PLAN:
Step 1: Import stdio.h, stdlib.h, and time.h libraries. These lines will be executed if a main function exists.
Step 2: Verify that a main function exists.
Step 3: Since a main function exists, the main function is executed.
Step 4: Variable initialization in the main function: initialize the seed used by the random number generator.
Step 5: Variable assignment in the main function: assign a random integer generated by rand() to the variable my_rand.
Step 6: If-else block within the main function: if my_rand is an even number, then call the simple_recursion function with my_rand as input. Otherwise, call the simple_recursion function with my_rand-1 as input. Since my_rand has probability 1/2 of being an even number, either block could be executed with equal probability.
Step 7: Verify that a simple_recursion function with one integer parameter exists.
Step 8: Since a simple_recursion function with one integer parameter exists, the simple_recursion function is executed.
Step 9: Conditional statement in simple_recursion function: if parameter my_rand is greater than 1, call the simple_recursion function with my_rand/2 as input. Since this is a recursive function, we will repeat Step 9 until my_rand equals 1, at which point we will reach the else block and return.
The code coverage of the given code snippet is then -
> #include<stdio.h>
> #include<stdlib.h>
> #include<time.h>
> void simple_recursion(int my_rand){
>     if (my_rand > 1){
>         simple_recursion(my_rand/2);
      }
>     else {
>         return;
      }
  }
> int main(){
>     srand(time(NULL));
>     int my_rand = rand();
>     if ((my_rand % 2) == 0){
!         simple_recursion(my_rand);
      }
>     else {
>         simple_recursion(my_rand-1);
      }
  }
--------------------------------------------------------------------------------------------------------------------------------
Example 3 -
Code snippet:
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
int main(){
    srand(time(NULL));
    int my_rand = rand() % (32);
    if (my_rand < 0){
        printf("my_rand < 0\n");
    }
    else if (my_rand >= 32){
        printf("my_rand >= 32\n");
    }
    else {
        printf("0 <= my_rand < 32\n");
    }
}
Step 1: Import stdio.h, stdlib.h, and time.h libraries. These lines will be executed if a main function exists.
Step 2: Verify that a main function exists.
Step 3: Since a main function exists, the main function is executed.
Step 4: Variable initialization in the main function: initialize the seed used by the random number generator.
Step 5: Variable assignment in the main function: assign a random integer generated by rand() from the set of integers 0 to 31 inclusive to the variable my_rand.
Step 6: If-else block within the main function: if my_rand has a value which is less than 0, print "my_rand < 0\n". From Step 5, we know that my_rand cannot be less than 0. Thus, the print statement for this conditional block is not executed. If my_rand has a value which is more than or equal to 32, print "my_rand >= 32\n". From Step 5, we know that my_rand cannot be more than or equal to 32. Thus, the print statement for this conditional block is not executed. If my_rand has a value which is not less than 0 and not more than or equal to 32, then print "0 <= my_rand < 32\n". From Step 5, we know that my_rand is a value from the set of integers 0 to 31 inclusive. Thus, the print statement for this conditional block is executed.
The code coverage of the given code snippet is then -
> #include<stdio.h>
> #include<stdlib.h>
> #include<time.h>
> int main(){
>     srand(time(NULL));
>     int my_rand = rand() % (32);
>     if (my_rand < 0){
!         printf("my_rand < 0\n");
      }
>     else if (my_rand >= 32){
!         printf("my_rand >= 32\n");
      }
>     else {
>         printf("0 <= my_rand < 32\n");
      }
  }
--------------------------------------------------------------------------------------------------------------------------------
